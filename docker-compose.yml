version: "3.7"

x-default-variables: &default-variables
  CHAIN_REGISTRY_URL: ${CHAIN_REGISTRY_URL-http://chain-registry:8081}
  CHAIN_REGISTRY_METRICS_URL: ${CHAIN_REGISTRY_METRICS_URL-http://chain-registry:8082}
  CONTRACT_REGISTRY_URL: ${CONTRACT_REGISTRY_URL-contract-registry:8080}
  CONTRACT_REGISTRY_HTTP_URL: ${CONTRACT_REGISTRY_HTTP_URL-http://contract-registry:8081}
  CONTRACT_REGISTRY_METRICS_URL: ${CONTRACT_REGISTRY_METRICS_URL-http://contract-registry:8082}
  TRANSACTION_SCHEDULER_URL: ${TRANSACTION_SCHEDULER_URL-http://transaction-scheduler:8081}
  TRANSACTION_SCHEDULER_METRICS_URL: ${TRANSACTION_SCHEDULER_URL-http://transaction-scheduler:8082}
  TX_CRAFTER_METRICS_URL: ${TX_CRAFTER_METRICS_URL-http://tx-crafter:8082}
  TX_SIGNER_METRICS_URL: ${TX_SIGNER_METRICS_URL-http://tx-signer:8082}
  TX_LISTENER_METRICS_URL: ${TX_LISTENER_METRICS_URL-http://tx-listener:8082}
  TX_SENDER_METRICS_URL: ${TX_SENDER_METRICS_URL-http://tx-sender:8082}
  ETH_CLIENT_RETRY_MAX_ELAPSED_TIME: 5s
  LOG_LEVEL: ${LOG_LEVEL-debug}
  LOG_FORMAT: ${LOG_FORMAT-}
  JAEGER_AGENT_HOST: ${JAEGER_AGENT_HOST-jaeger}
  JAEGER_AGENT_PORT: ${JAEGER_AGENT_PORT-6831}
  NONCE_MANAGER_TYPE: ${NONCE_MANAGER_TYPE-redis}
  REDIS_HOST: ${REDIS_HOST-redis}
  REDIS_PORT: ${REDIS_PORT-6379}
  REDIS_USERNAME: ${REDIS_USERNAME-}
  REDIS_PASSWORD: ${REDIS_PASSWORD-}
  REDIS_DATABASE: ${REDIS_DATABASE-}
  REDIS_TLS_ENABLE: ${REDIS_TLS_ENABLE-}
  REDIS_TLS_CERT: ${REDIS_TLS_CERT-}
  REDIS_TLS_KEY: ${REDIS_TLS_KEY-}
  REDIS_TLS_CA: ${REDIS_TLS_CA-}
  REDIS_TLS_SKIP_VERIFY: ${REDIS_TLS_SKIP_VERIFY-}
  VAULT_ADDR: ${VAULT_ADDR-http://vault:8200}
  # FAUCET_CREDITOR_ADDRESS: ${FAUCET_CREDITOR_ADDRESS-0x93f7274c9059e601be4512f656b57b830e019e41}@${GETH_NETWORKID-888}
  MULTI_TENANCY_ENABLED: ${MULTI_TENANCY_ENABLED-false}
  AUTH_JWT_CLAIMS_NAMESPACE: ${AUTH_JWT_CLAIMS_NAMESPACE-http://tenant.info/}
  AUTH_JWT_CERTIFICATE: ${AUTH_JWT_CERTIFICATE-}
  AUTH_API_KEY: ${AUTH_API_KEY-}
  KAFKA_URL: ${KAFKA_URL-kafka:29092}
  KAFKA_SASL_ENABLED: ${KAFKA_SASL_ENABLED-false}
  KAFKA_SASL_MECHANISM: ${KAFKA_SASL_MECHANISM-PLAIN}
  KAFKA_SASL_USER: ${KAFKA_SASL_USER-}
  KAFKA_SASL_PASSWORD: ${KAFKA_SASL_PASSWORD-}
  KAFKA_TLS_ENABLED: ${KAFKA_TLS_ENABLED-false}
  KAFKA_TLS_INSECURE_SKIP_VERIFY: ${KAFKA_TLS_INSECURE_SKIP_VERIFY-false}
  DB_TLS_SSLMODE: ${DB_TLS_SSLMODE-}
  DB_TLS_CERT: ${DB_TLS_CERT-}
  DB_TLS_KEY: ${DB_TLS_KEY-}
  DB_TLS_CA: ${DB_TLS_CA-}
  DB_POOLSIZE: ${DB_POOLSIZE-}

x-container-common: &container-common
  image: golang:1.15.6-buster
  restart: ${CONTAINER_RESTART-on-failure}
  entrypoint: /bin/main
  tty: true
  networks:
    - orchestrate
    - quorum
  volumes:
    - ./build/bin/orchestrate:/bin/main:ro
    - ./public:/go/public:ro
  labels:
    filebeat: "true"

x-chain-registry-common: &chain-registry-common
  CHAIN_REGISTRY_TYPE: ${CHAIN_REGISTRY_TYPE-}
  DB_HOST: postgres-chain-registry

x-contract-registry-common: &contract-registry-common
  CONTRACT_REGISTRY_TYPE: ${CONTRACT_REGISTRY_TYPE-}
  DB_HOST: postgres-contract-registry

x-transaction-scheduler-common: &transaction-scheduler-common
  TRANSACTION_SCHEDULER_TYPE: ${TRANSACTION_SCHEDULER_TYPE-}
  DB_HOST: postgres-transaction-scheduler

services:
  chain-registry-migration-init:
    <<: *container-common
    environment:
      <<: *default-variables
      <<: *chain-registry-common
    restart: "no"
    command: chain-registry migrate init

  chain-registry-migration:
    <<: *container-common
    environment:
      <<: *default-variables
      <<: *chain-registry-common
    restart: "no"
    depends_on:
      - chain-registry-migration-init
    command: chain-registry migrate up

  chain-registry:
    <<: *container-common
    ports:
      - 8011:8081
      - 8012:8082
    environment:
      <<: *default-variables
      <<: *chain-registry-common
      CHAIN_REGISTRY_INIT: ${CHAIN_REGISTRY_INIT-}
      CHAIN_REGISTRY_CACHE_TTL: ${CHAIN_REGISTRY_CACHE_TTL-}
      CHAIN_REGISTRY_MAXIDLECONNSPERHOST: ${CHAIN_REGISTRY_MAXIDLECONNSPERHOST-}
    depends_on:
      - chain-registry-migration
    command: chain-registry run
    labels:
      filebeat: "false"

  contract-registry-migration-init:
    <<: *container-common
    environment:
      <<: *default-variables
      <<: *contract-registry-common
    restart: "no"
    command: contract-registry migrate init

  contract-registry-migration:
    <<: *container-common
    environment:
      <<: *default-variables
      <<: *contract-registry-common
    restart: "no"
    depends_on:
      - contract-registry-migration-init
    command: contract-registry migrate up

  contract-registry:
    <<: *container-common
    ports:
      - 8020:8080
      - 8021:8081
      - 8022:8082
    environment:
      <<: *default-variables
      <<: *contract-registry-common
      ABI: ${ABI-}
    depends_on:
      - contract-registry-migration
    command: contract-registry run

  transaction-scheduler-migration-init:
    <<: *container-common
    environment:
      <<: *default-variables
      <<: *transaction-scheduler-common
    restart: "no"
    command: transaction-scheduler migrate init

  transaction-scheduler-migration:
    <<: *container-common
    environment:
      <<: *default-variables
      <<: *transaction-scheduler-common
    restart: "no"
    depends_on:
      - transaction-scheduler-migration-init
    command: transaction-scheduler migrate up

  transaction-scheduler:
    <<: *container-common
    ports:
      - 8031:8081
      - 8032:8082
    environment:
      <<: *default-variables
      <<: *transaction-scheduler-common
    depends_on:
      - transaction-scheduler-migration
      - contract-registry
      - chain-registry
    command: transaction-scheduler run

  tx-crafter:
    <<: *container-common
    ports:
      - 8042:8082
    environment:
      <<: *default-variables
      JAEGER_SERVICE_NAME: TX-CRAFTER
    depends_on:
      - contract-registry
      - transaction-scheduler
    command: tx-crafter run

  tx-signer:
    <<: *container-common
    ports:
      - 8052:8082
    environment:
      <<: *default-variables
      JAEGER_SERVICE_NAME: TX-SIGNER
      SECRET_PKEY: ${SECRET_PKEY-}
      SECRET_STORE: ${SECRET_STORE-hashicorp}
    volumes:
      - vault-token:/vault/token
      - ./build/bin/orchestrate:/bin/main
    command: tx-signer run

  tx-sender:
    ports:
      - 8062:8082
    <<: *container-common
    environment:
      <<: *default-variables
      JAEGER_SERVICE_NAME: TX-SENDER
    depends_on:
      - transaction-scheduler
    command: tx-sender run

  tx-listener:
    ports:
      - 8072:8082
    <<: *container-common
    environment:
      <<: *default-variables
      JAEGER_SERVICE_NAME: TX-LISTENER
    depends_on:
      - transaction-scheduler
      - chain-registry
    command: tx-listener run

  e2e:
    <<: *container-common
    environment:
      <<: *default-variables
      CUCUMBER_OUTPUTPATH: "/report/output/report.json"
      CUCUMBER_PATHS: "/features"
      ARTIFACTS_PATH: "/artifacts"
      CUCUMBER_FORMAT: "cucumber"
      CUCUMBER_CONCURRENCY: ${CUCUMBER_CONCURRENCY-}
      TEST_GLOBAL_DATA: ${TEST_GLOBAL_DATA-}
      AUTH_JWT_PRIVATE_KEY: ${AUTH_JWT_PRIVATE_KEY-}
      CUCUMBER_STEPS_TIMEOUT: ${CUCUMBER_STEPS_TIMEOUT-20s}
      CUCUMBER_TAGS: ${CUCUMBER_TAGS-}
    restart: "no"
    command: e2e
    volumes:
      - ./build/bin/test:/bin/main
      - ./build/report:/report/output
      - ./tests/features:/features
      - ./tests/artifacts:/artifacts

  stress:
    <<: *container-common
    environment:
      <<: *default-variables
      ARTIFACTS_PATH: "/artifacts"
      STRESS_CONCURRENCY: "50"
      STRESS_ITERATIONS: "5000"
      TEST_GLOBAL_DATA: ${TEST_GLOBAL_DATA-}
    restart: "no"
    command: stress
    volumes:
      - ./build/bin/test:/bin/main
      - ./tests/artifacts:/artifacts

  generate-jwt:
    <<: *container-common
    environment:
      <<: *default-variables
      AUTH_JWT_PRIVATE_KEY: ${AUTH_JWT_PRIVATE_KEY-}
    command: utils generate-jwt --tenant=${TENANT_ID-_} --expiration=${EXPIRATION-24h}
    restart: "no"

volumes:
  vault-token:
    external:
      name: deps_vault-token

networks:
  orchestrate:
    external:
      name: deps_orchestrate
  quorum:
    external:
      name: deps_quorum-tessera
